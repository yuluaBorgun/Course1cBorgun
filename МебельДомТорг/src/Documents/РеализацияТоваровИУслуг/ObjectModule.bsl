
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		// Заполнение шапки
		Клиент = ДанныеЗаполнения.Клиент;
		Склад = ДанныеЗаполнения.Склад;
		Для Каждого ТекСтрокаТовраы Из ДанныеЗаполнения.Товраы Цикл
			НоваяСтрока = Товраы.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТовраы.Количество;
			НоваяСтрока.Сумма = ТекСтрокаТовраы.Сумма;
			НоваяСтрока.Товар = ТекСтрокаТовраы.Товар;
			НоваяСтрока.Цена = ТекСтрокаТовраы.Цена;
		КонецЦикла;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	// регистр Взаиморасчеты Приход
	Движения.Взаиморасчеты.Записывать = Истина;
	Для Каждого ТекСтрокаТовраы Из Товраы Цикл
		Движение = Движения.Взаиморасчеты.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Контрагент = Клиент;
		Движение.Сумма = СуммаДокумента;
	КонецЦикла;

	
	// регистр ТоварыНаСкладах Расход
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Для Каждого ТекСтрокаТовраы Из Товраы Цикл
		Движение = Движения.ТоварыНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовраы.Товар;
		Движение.Склад = Склад;
		Движение.Количество = ТекСтрокаТовраы.Количество;
	КонецЦикла;

	// регистр ТоварыНаСкладах Расход
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Для Каждого ТекСтрокаТовраы Из Товраы Цикл
		Движение = Движения.ТоварыНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовраы.Товар;
		Движение.Склад = Склад;
		Движение.Количество = ТекСтрокаТовраы.Количество;
	КонецЦикла;
	
	Движения.Записать();
	Если Режим = РежимПроведенияДокумента.Оперативный  Тогда
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура,
		|	ТоварыНаСкладахОстатки.Склад,
		|	-ТоварыНаСкладахОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			,
		|			Склад = &Склад
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						РеализацияТоваровИУслугТовраы.Товар
		|					ИЗ
		|						Документ.РеализацияТоваровИУслуг.Товраы КАК РеализацияТоваровИУслугТовраы
		|					ГДЕ
		|						РеализацияТоваровИУслугТовраы.Ссылка = &Ссылка)) КАК ТоварыНаСкладахОстатки
		|ГДЕ
		|	ТоварыНаСкладахОстатки.КоличествоОстаток < 0";
		
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Отказ= Истина;
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(); 
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
				Сообщить("Недостаточно товара " +ВыборкаДетальныеЗаписи.Номенклатура + "в количестве" + ВыборкаДетальныеЗаписи.Количество);	
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;  
	
	Если НЕ Отказ   Тогда
		
		Движения.СебестоимостьТоваров.Записывать = Истина;	
		// регистр Продажи 
		Движения.Продажи.Записывать = Истина;
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СебестоимостьТоваровОстатки.Номенклатура,
		|	СебестоимостьТоваровОстатки.СуммаОстаток КАК Сумма,
		|	СебестоимостьТоваровОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки(
		|			&МоментВремени,
		|			Номенклатура В
		|				(ВЫБРАТЬ
		|					РеализацияТоваровИУслугТовраы.Товар
		|				ИЗ
		|					Документ.РеализацияТоваровИУслуг.Товраы КАК РеализацияТоваровИУслугТовраы
		|				ГДЕ
		|					РеализацияТоваровИУслугТовраы.Ссылка = &Ссылка)) КАК СебестоимостьТоваровОстатки";
		
		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			 Если ВыборкаДетальныеЗаписи.Количество <> 0   Тогда
			 	СебестоимостьЕденицы =  ВыборкаДетальныеЗаписи.Сумма/ВыборкаДетальныеЗаписи.Количество;
		 	 Иначе  
			 	СебестоимостьЕденицы = 0;
			КонецЕсли; 
			Движение = Движения.СебестоимостьТоваров.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;  
			
			СтрокаТЧ = Товраы.Найти(ВыборкаДетальныеЗаписи.Номенклатура, "Товар");
			
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура; 
			Движение.Количество = СтрокаТЧ.Количество;
            СебестоимостьСписание = СебестоимостьЕденицы*СтрокаТЧ.Количество;
			Движение.Сумма = СебестоимостьСписание;
			//Движение по регистру продажи
			Движение = Движения.Продажи.Добавить();
			Движение.Период = Дата;
			Движение.Клиент = Клиент;
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			Движение.Количество = СтрокаТЧ.Количество;
			Движение.Сумма = СтрокаТЧ.Сумма;
            Движение.Себестоимость = СебестоимостьСписание; 
		КонецЦикла;
		
				
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаДокумента=0;
	Для Каждого СтрокаТЧ ИЗ Товраы Цикл
		СуммаДокумента = СуммаДокумента + СтрокаТЧ.Сумма;	
		//Сообщить(СтрокаТЧ.Товар.ОсновнойПоставщик);
	КонецЦикла;
	//Сообщить(МоментВремени());
КонецПроцедуры
